# situation
# which
set_{{varname}}_base_success_chance = {
	set_variable = { which = $WHICH$ value = 0}

	OWNER = {
		every_pop_faction = {
			if = {
				limit = {
					OR = {
						{% for supportingFaction in supportingFactions %}
						is_pop_faction_type = {{supportingFaction}}
						{% endfor %}
						{% for factionHappyWithChange in factionsHappyWithChange %}
						{% set isAlreadySupporting = "false" %}
						{% for supportingFaction in supportingFactions %}
							{%if factionHappyWithChange.faction == supportingFaction.varname %}
								{% set isAlreadySupporting = "true" %}
							{% endif %}
						{% endfor %}
						{%if isAlreadySupporting == "false" %}
							AND = {
								is_pop_faction_type = {{factionHappyWithChange.faction}}
								ROOT = { has_policy_flag = {{factionHappyWithChange.fromPolicy}} }
							}
						{% endif %}
						{% endfor %}
					}
					{% for factionAngryWithChange in factionsAngryWithChange %}
					NAND = {
						is_pop_faction_type = {{factionAngryWithChange.faction}}
						ROOT = { has_policy_flag = {{factionAngryWithChange.fromPolicy}} }
					}
					{% endfor %}
				}
				export_trigger_value_to_variable = { trigger = support variable = support }
				multiply_variable = {which = support value = 100}
				ROOT = {
					change_variable = { which = $WHICH$ value = PREV.support }		
				}
			}
		}
	}
}

# situation
# which
set_{{varname}}_base_stall_chance = {
	set_variable = { which = $WHICH$ value = 0}
	OWNER = {
		every_pop_faction = {
			if = {
				limit = {
					OR = {
						{% for detractingFaction in detractingFactions %}
						is_pop_faction_type = {{detractingFaction}}
						{% endfor %}
						{% for factionAngryWithChange in factionsAngryWithChange %}
						{% set isAlreadyAgainst = "false" %}
						{% for detractingFaction in detractingFactions %}
							{%if factionAngryWithChange.faction == detractingFaction.varname %}
								{% set isAlreadyAgainst = "true" %}
							{% endif %}
						{% endfor %}
						{%if isAlreadyAgainst == "false" %}
							AND = {
								is_pop_faction_type = {{factionAngryWithChange.faction}}
								ROOT = { has_policy_flag = {{factionAngryWithChange.fromPolicy}} }
							}
						{% endif %}
						{% endfor %}
					}
					{% for factionAngryWithChange in factionsAngryWithChange %}
					NAND = {
						is_pop_faction_type = {{factionAngryWithChange.faction}}
						ROOT = { has_policy_flag = {{factionAngryWithChange.fromPolicy}} }
					}
					{% endfor %}
				}
				export_trigger_value_to_variable = { trigger = support variable = {{detractingFaction}}_support }
				multiply_variable = {which = {{detractingFaction}}_support value = 100}
				ROOT = {
					change_variable = { which = $WHICH$ value = PREV.{{detractingFaction}}_support }	
				}
			}
		}
	}
}

# Success, stall, and advance summed give greater than 100
# debate_chance is equal to 100-success-stall-advance
{{varname}}_end_of_discussion = {
	set_variable = { which = old_advance_chance value = advance_chance }
	change_variable = { which = advance_chance value = debate_chance}
	max = { WHICH = advance_chance MAX = 0 }
	
	# if old advance chance was 5, but we need to give away -20 debate, then 5 - 0 = 5, -20 -> -15
	# if old advance was 50, but we need to give away -20, then 50 - 30 = 20, -20 -> 0
	subtract_variable = {which = old_advance_chance value = advance_chance }
	change_variable = { which = debate_chance value = old_advance_chance }

	if = {
		limit = {
			check_variable = { which = success_chance value > stall_chance }
		}
		change_variable = { which = stall_chance value = debate_chance } 
	}
	else = {
		change_variable = { which = success_chance value = debate_chance } 
	}
	set_variable = { which = debate_chance value = 0 }
}