namespace = movement_roboticWorkersOutlawed

country_event = {
	id = movement_roboticWorkersOutlawed.1
	
	is_triggered_only = yes
	# mean_time_to_happen = {years = 10}

	hide_window = yes

	pre_triggers = {
		is_ai = no # Testing only
	}
	immediate = {
		set_variable = { which = movement_roboticWorkersOutlawed_support value = 0}
		set_variable = { which = movement_roboticWorkersOutlawed_radicalism value = 0}
	
		if = {
			limit = {
				NOR = { has_ethic = ethic_materialist has_ethic = ethic_fanatic_materialist has_country_flag = synthetic_empire }
			}
			country_event = { id = movement_roboticWorkersOutlawed.2 }
		}
	}
}
country_event = {
	id = movement_roboticWorkersOutlawed.2
	title = movement_roboticWorkersOutlawed.2.name
	desc = movement_roboticWorkersOutlawed.2.desc
	picture = GFX_evt_organic_oppression
	hide_window = no
	is_triggered_only = yes

	immediate = {
		every_pop_faction = {
			
			if = {
				limit = {
					is_pop_faction_type = technologist
				}
				export_trigger_value_to_variable = { trigger = support variable = roboticWorkersOutlawed_faction_support }
				multiply_variable = {which = roboticWorkersOutlawed_faction_support value = 100}
				# roboticWorkersOutlawed_faction_support is 0 to 100
				log = "Movement roboticWorkersOutlawed technologist support: [THIS.roboticWorkersOutlawed_faction_support]"
				export_modifier_to_variable = { modifier = faction_approval variable = roboticWorkersOutlawed_faction_approval }
				subtract_variable = {which = roboticWorkersOutlawed_faction_approval value = 0.5}
				multiply_variable = {which = roboticWorkersOutlawed_faction_approval value = 2}
				# roboticWorkersOutlawed_faction_approval is -1 to 1
				
				multiply_variable = { which = roboticWorkersOutlawed_faction_approval value=roboticWorkersOutlawed_faction_support }

				ROOT = {
					change_variable = { which = movement_roboticWorkersOutlawed_support value = PREV.roboticWorkersOutlawed_faction_support }
					if = {
						limit = { 
							check_variable = { which = PREV.roboticWorkersOutlawed_faction_approval value < 0}
						}
						change_variable = { which = movement_roboticWorkersOutlawed_radicalism value = PREV.roboticWorkersOutlawed_faction_support }
					}
				}
			}
			
			if = {
				limit = {
					is_pop_faction_type = prosperity
				}
				export_trigger_value_to_variable = { trigger = support variable = roboticWorkersOutlawed_faction_support }
				multiply_variable = {which = roboticWorkersOutlawed_faction_support value = 100}
				# roboticWorkersOutlawed_faction_support is 0 to 100
				log = "Movement roboticWorkersOutlawed prosperity support: [THIS.roboticWorkersOutlawed_faction_support]"
				export_modifier_to_variable = { modifier = faction_approval variable = roboticWorkersOutlawed_faction_approval }
				subtract_variable = {which = roboticWorkersOutlawed_faction_approval value = 0.5}
				multiply_variable = {which = roboticWorkersOutlawed_faction_approval value = 2}
				# roboticWorkersOutlawed_faction_approval is -1 to 1
				
				multiply_variable = { which = roboticWorkersOutlawed_faction_approval value=roboticWorkersOutlawed_faction_support }

				ROOT = {
					change_variable = { which = movement_roboticWorkersOutlawed_support value = PREV.roboticWorkersOutlawed_faction_support }
					if = {
						limit = { 
							check_variable = { which = PREV.roboticWorkersOutlawed_faction_approval value < 0}
						}
						change_variable = { which = movement_roboticWorkersOutlawed_radicalism value = PREV.roboticWorkersOutlawed_faction_support }
					}
				}
			}
			
			
			# every_owned_pop = {
			# 	limit = {
			# 		OR = {
			# 			
			# 			has_ethic = ethic_materialist
			# 			has_ethic = ethic_fanatic_materialist
			# 			
			# 			has_ethic = ethic_pacifist
			# 			has_ethic = ethic_fanatic_pacifist
			# 			
			# 		}
			# 	}
			# 	export_modifier_to_variable = { modifier = pop_political_power variable = pop_support }
			# 	export_modifier_to_variable = { modifier = pop_happiness variable = pop_approval }
			# }
		}

		ceiling_variable = movement_roboticWorkersOutlawed_support
		ceiling_variable = movement_roboticWorkersOutlawed_radicalism
		log = "Movement roboticWorkersOutlawed support: [THIS.movement_roboticWorkersOutlawed_support] radicalism: [THIS.movement_roboticWorkersOutlawed_radicalism]"	
	}
	option = {
		name = OK
	}
}